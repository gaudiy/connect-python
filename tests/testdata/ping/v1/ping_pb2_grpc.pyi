"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import ping.v1.ping_pb2
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class PingServiceStub:
    """*
    PingService defines example RPCs.
    """

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Ping: grpc.UnaryUnaryMultiCallable[
        ping.v1.ping_pb2.PingRequest,
        ping.v1.ping_pb2.PingResponse,
    ]

class PingServiceAsyncStub:
    """*
    PingService defines example RPCs.
    """

    Ping: grpc.aio.UnaryUnaryMultiCallable[
        ping.v1.ping_pb2.PingRequest,
        ping.v1.ping_pb2.PingResponse,
    ]

class PingServiceServicer(metaclass=abc.ABCMeta):
    """*
    PingService defines example RPCs.
    """

    @abc.abstractmethod
    def Ping(
        self,
        request: ping.v1.ping_pb2.PingRequest,
        context: _ServicerContext,
    ) -> typing.Union[ping.v1.ping_pb2.PingResponse, collections.abc.Awaitable[ping.v1.ping_pb2.PingResponse]]: ...

def add_PingServiceServicer_to_server(servicer: PingServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
