# Generated by the protoc-gen-connect-python. DO NOT EDIT!
# source: connectrpc/conformance/v1/conformancev1connect/service.proto
# Protobuf Python Version: (unknown)
# protoc-gen-connect-python version: v0.0.0-20250512120003-94057eaf7bbc
"""Generated connect code."""

from enum import Enum

from connect.client import Client
from connect.connect import StreamRequest, StreamResponse, UnaryRequest, UnaryResponse
from connect.handler import ClientStreamHandler, Handler, ServerStreamHandler, UnaryHandler
from connect.options import ClientOptions, ConnectOptions
from connect.session import AsyncClientSession
from google.protobuf.descriptor import MethodDescriptor, ServiceDescriptor

from .. import service_pb2
from ..service_pb2 import UnaryRequest, UnaryResponse, ServerStreamRequest, ServerStreamResponse, ClientStreamRequest, ClientStreamResponse, BidiStreamRequest, BidiStreamResponse, UnimplementedRequest, UnimplementedResponse, IdempotentUnaryRequest, IdempotentUnaryResponse


class ConformanceServiceProcedures(Enum):
    """Procedures for the ConformanceService service."""

    Unary = "/connectrpc.conformance.v1.ConformanceService/Unary"
    ServerStream = "/connectrpc.conformance.v1.ConformanceService/ServerStream"
    ClientStream = "/connectrpc.conformance.v1.ConformanceService/ClientStream"
    BidiStream = "/connectrpc.conformance.v1.ConformanceService/BidiStream"
    Unimplemented = "/connectrpc.conformance.v1.ConformanceService/Unimplemented"
    IdempotentUnary = "/connectrpc.conformance.v1.ConformanceService/IdempotentUnary"


ConformanceService_service_descriptor: ServiceDescriptor = service_pb2.DESCRIPTOR.services_by_name["ConformanceService"]

ConformanceServiceUnary_method_descriptor: MethodDescriptor = ConformanceService_service_descriptor.methods_by_name["Unary"]
ConformanceServiceServerStream_method_descriptor: MethodDescriptor = ConformanceService_service_descriptor.methods_by_name["ServerStream"]
ConformanceServiceClientStream_method_descriptor: MethodDescriptor = ConformanceService_service_descriptor.methods_by_name["ClientStream"]
ConformanceServiceBidiStream_method_descriptor: MethodDescriptor = ConformanceService_service_descriptor.methods_by_name["BidiStream"]
ConformanceServiceUnimplemented_method_descriptor: MethodDescriptor = ConformanceService_service_descriptor.methods_by_name["Unimplemented"]
ConformanceServiceIdempotentUnary_method_descriptor: MethodDescriptor = ConformanceService_service_descriptor.methods_by_name["IdempotentUnary"]


class ConformanceServiceClient:
    def __init__(self, base_url: str, session: AsyncClientSession, options: ClientOptions | None = None) -> None:
        base_url = base_url.removesuffix("/")

        self.Unary = Client[UnaryRequest, UnaryResponse](
            session, base_url + ConformanceServiceProcedures.Unary.value, UnaryRequest, UnaryResponse, options
        ).call_unary
        self.ServerStream = Client[ServerStreamRequest, ServerStreamResponse](
            session, base_url + ConformanceServiceProcedures.ServerStream.value, ServerStreamRequest, ServerStreamResponse, options
        ).call_server_stream
        self.ClientStream = Client[ClientStreamRequest, ClientStreamResponse](
            session, base_url + ConformanceServiceProcedures.ClientStream.value, ClientStreamRequest, ClientStreamResponse, options
        ).call_client_stream
        self.BidiStream = Client[BidiStreamRequest, BidiStreamResponse](
            session, base_url + ConformanceServiceProcedures.BidiStream.value, BidiStreamRequest, BidiStreamResponse, options
        ).call_server_stream
        self.Unimplemented = Client[UnimplementedRequest, UnimplementedResponse](
            session, base_url + ConformanceServiceProcedures.Unimplemented.value, UnimplementedRequest, UnimplementedResponse, options
        ).call_unary
        self.IdempotentUnary = Client[IdempotentUnaryRequest, IdempotentUnaryResponse](
            session, base_url + ConformanceServiceProcedures.IdempotentUnary.value, IdempotentUnaryRequest, IdempotentUnaryResponse, options
        ).call_unary


class ConformanceServiceHandler:
    """Handler for the conformanceService service."""

    async def Unary(self, request: UnaryRequest[UnaryRequest]) -> UnaryResponse[UnaryResponse]: ...

    async def ServerStream(self, request: StreamRequest[ServerStreamRequest]) -> StreamResponse[ServerStreamResponse]: ...

    async def ClientStream(self, request: StreamRequest[ClientStreamRequest]) -> StreamResponse[ClientStreamResponse]: ...

    async def BidiStream(self, request: StreamRequest[BidiStreamRequest]) -> StreamResponse[BidiStreamResponse]: ...

    async def Unimplemented(self, request: UnaryRequest[UnimplementedRequest]) -> UnaryResponse[UnimplementedResponse]: ...

    async def IdempotentUnary(self, request: UnaryRequest[IdempotentUnaryRequest]) -> UnaryResponse[IdempotentUnaryResponse]: ...


def create_ConformanceService_handlers(service: ConformanceServiceHandler, options: ConnectOptions | None = None) -> list[Handler]:
    handlers = [
        UnaryHandler(
            procedure=ConformanceServiceProcedures.Unary.value,
            unary=service.Unary,
            input=UnaryRequest,
            output=UnaryResponse,
            options=options,
        ),
        ServerStreamHandler(
            procedure=ConformanceServiceProcedures.ServerStream.value,
            stream=service.ServerStream,
            input=ServerStreamRequest,
            output=ServerStreamResponse,
            options=options,
        ),
        ClientStreamHandler(
            procedure=ConformanceServiceProcedures.ClientStream.value,
            stream=service.ClientStream,
            input=ClientStreamRequest,
            output=ClientStreamResponse,
            options=options,
        ),
        ServerStreamHandler(
            procedure=ConformanceServiceProcedures.BidiStream.value,
            stream=service.BidiStream,
            input=BidiStreamRequest,
            output=BidiStreamResponse,
            options=options,
        ),
        UnaryHandler(
            procedure=ConformanceServiceProcedures.Unimplemented.value,
            unary=service.Unimplemented,
            input=UnimplementedRequest,
            output=UnimplementedResponse,
            options=options,
        ),
        UnaryHandler(
            procedure=ConformanceServiceProcedures.IdempotentUnary.value,
            unary=service.IdempotentUnary,
            input=IdempotentUnaryRequest,
            output=IdempotentUnaryResponse,
            options=options,
        ),
    ]
    return handlers
