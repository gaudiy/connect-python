# Generated by the protoc-gen-connect-python. DO NOT EDIT!
# source: examples/proto/connectrpc/eliza/v1/v1connect/eliza.proto
# Protobuf Python Version: v5.29.2
# protoc-gen-connect-python version: (devel)
"""Generated connect code."""

import abc
from collections.abc import AsyncIterator
from enum import Enum

from connect.client import Client
from connect.connect import ConnectRequest, ConnectResponse
from connect.handler import UnaryHandler
from connect.options import ClientOptions, ConnectOptions
from google.protobuf.descriptor import MethodDescriptor, ServiceDescriptor

from .. import eliza_pb2
from ..eliza_pb2 import IntroduceRequest, IntroduceResponse, SayRequest, SayResponse


class ElizaServiceProcedures(Enum):
    """Procedures for the eliza service."""

    Say = "/connectrpc.eliza.v1.ElizaService/Say"
    IntroduceServer = "/connectrpc.eliza.v1.ElizaService/IntroduceServer"


ElizaService_service_descriptor: ServiceDescriptor = eliza_pb2.DESCRIPTOR.services_by_name["ElizaService"]

ElizaService_Say_method_descriptor: MethodDescriptor = ElizaService_service_descriptor.methods_by_name["Say"]
ElizaService_IntroduceServer_method_descriptor: MethodDescriptor = ElizaService_service_descriptor.methods_by_name[
    "IntroduceServer"
]


class ElizaServiceClient:
    def __init__(self, base_url: str, options: ClientOptions | None = None) -> None:
        base_url = base_url.removesuffix("/")

        self.Say = Client[SayRequest, SayResponse](
            base_url + ElizaServiceProcedures.Say.value, SayRequest, SayResponse, options
        ).call_unary
        self.IntroduceServer = Client[IntroduceRequest, IntroduceResponse](
            base_url + ElizaServiceProcedures.IntroduceServer.value, IntroduceRequest, IntroduceResponse, options
        ).call_server_stream


class ElizaServiceHandler(metaclass=abc.ABCMeta):
    """Handler for the eliza service."""

    @abc.abstractmethod
    async def Say(self, request: ConnectRequest[SayRequest]) -> ConnectResponse[SayResponse]: ...
    @abc.abstractmethod
    async def IntroduceServer(
        self, request: ConnectRequest[IntroduceRequest]
    ) -> AsyncIterator[ConnectResponse[IntroduceResponse]]: ...


def create_ElizaService_handlers(
    service: ElizaServiceHandler, options: ConnectOptions | None = None
) -> list[UnaryHandler]:
    handlers = [
        UnaryHandler(
            procedure=ElizaServiceProcedures.Say.value,
            unary=service.Say,
            input=SayRequest,
            output=SayResponse,
            options=options,
        )
    ]
    return handlers
